{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    products: [],\n    quantity: 0,\n    total: 0\n  },\n  reducers: {\n    addProduct: (state, action) => {\n      state.products.push(action.payload);\n      state.quantity += 1;\n      state.total += action.payload.totalPrice;\n    },\n    deleteProduct: (state, action) => {\n      state.products = action.payload;\n      state.quantity -= 1;\n      state.total += action.payload.totalPrice;\n    },\n    updatePrice: (state, action) => {\n      state.total = action.payload;\n    },\n    updateProduct: (state, action) => {\n      state.products = action.payload;\n    },\n    clearCart: state => {\n      state.products = [];\n      state.quantity = 0;\n      state.total = 0;\n    }\n  }\n});\nexport const {\n  addProduct,\n  deleteProduct,\n  clearCart,\n  updatePrice,\n  updateProduct\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","products","quantity","total","reducers","addProduct","state","action","push","payload","totalPrice","deleteProduct","updatePrice","updateProduct","clearCart","actions","reducer"],"sources":["/home/asus/Downloads/NOBORUPA-main/NOBORUPA/client/src/redux/cartRedux.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\r\n\r\nexport const cartSlice = createSlice({\r\n          name:\"cart\",\r\n          initialState:{\r\n                    products:[],\r\n                    quantity:0,\r\n                    total:0\r\n          },\r\n          reducers:{\r\n                    addProduct:(state,action)=>{\r\n                              state.products.push(action.payload);\r\n                              state.quantity += 1;\r\n                              state.total += action.payload.totalPrice;\r\n                    },\r\n                    deleteProduct:(state,action)=>{\r\n                              state.products = action.payload ;\r\n                              state.quantity -= 1;\r\n                              state.total += action.payload.totalPrice;\r\n                    },\r\n                    updatePrice:(state,action)=>{\r\n                              state.total = action.payload;\r\n                    },\r\n                    updateProduct:(state,action)=>{\r\n                              state.products = action.payload;\r\n                    },\r\n                    clearCart:(state)=>{\r\n                              state.products =[];\r\n                              state.quantity = 0;\r\n                              state.total = 0;\r\n                    }\r\n          }\r\n})\r\n\r\nexport const {addProduct,deleteProduct,clearCart,updatePrice,updateProduct} = cartSlice.actions\r\n\r\nexport  default cartSlice.reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC3BE,IAAI,EAAC,MADsB;EAE3BC,YAAY,EAAC;IACHC,QAAQ,EAAC,EADN;IAEHC,QAAQ,EAAC,CAFN;IAGHC,KAAK,EAAC;EAHH,CAFc;EAO3BC,QAAQ,EAAC;IACCC,UAAU,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;MACjBD,KAAK,CAACL,QAAN,CAAeO,IAAf,CAAoBD,MAAM,CAACE,OAA3B;MACAH,KAAK,CAACJ,QAAN,IAAkB,CAAlB;MACAI,KAAK,CAACH,KAAN,IAAeI,MAAM,CAACE,OAAP,CAAeC,UAA9B;IACT,CALF;IAMCC,aAAa,EAAC,CAACL,KAAD,EAAOC,MAAP,KAAgB;MACpBD,KAAK,CAACL,QAAN,GAAiBM,MAAM,CAACE,OAAxB;MACAH,KAAK,CAACJ,QAAN,IAAkB,CAAlB;MACAI,KAAK,CAACH,KAAN,IAAeI,MAAM,CAACE,OAAP,CAAeC,UAA9B;IACT,CAVF;IAWCE,WAAW,EAAC,CAACN,KAAD,EAAOC,MAAP,KAAgB;MAClBD,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACE,OAArB;IACT,CAbF;IAcCI,aAAa,EAAC,CAACP,KAAD,EAAOC,MAAP,KAAgB;MACpBD,KAAK,CAACL,QAAN,GAAiBM,MAAM,CAACE,OAAxB;IACT,CAhBF;IAiBCK,SAAS,EAAER,KAAD,IAAS;MACTA,KAAK,CAACL,QAAN,GAAgB,EAAhB;MACAK,KAAK,CAACJ,QAAN,GAAiB,CAAjB;MACAI,KAAK,CAACH,KAAN,GAAc,CAAd;IACT;EArBF;AAPkB,CAAD,CAA7B;AAgCP,OAAO,MAAM;EAACE,UAAD;EAAYM,aAAZ;EAA0BG,SAA1B;EAAoCF,WAApC;EAAgDC;AAAhD,IAAiEf,SAAS,CAACiB,OAAjF;AAEP,eAAgBjB,SAAS,CAACkB,OAA1B"},"metadata":{},"sourceType":"module"}